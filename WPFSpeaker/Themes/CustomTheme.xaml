<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
                    xmlns:modernui="clr-namespace:FirstFloor.ModernUI;assembly=FirstFloor.ModernUI">

    <Style TargetType="mui:ModernWindow" x:Key="CustomTheme">
        <Setter Property="BackgroundContent" Value="{DynamicResource WindowBackgroundContent}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="640" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="MinHeight" Value="320" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mui:ModernWindow">
                    <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                        <Border.Background>
                            <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}" />
                        </Border.Background>
                        <Border.Resources>
                            <Storyboard x:Key="BackgroundAnimation">
                                <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
                            </Storyboard>
                        </Border.Resources>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <AdornerDecorator>
                                <Grid x:Name="LayoutRoot">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- window background content -->
                                    <ContentControl Grid.RowSpan="5" Content="{TemplateBinding BackgroundContent}" IsTabStop="False" />

                                    <!-- title bar -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!-- title -->
                                        <TextBlock Text="{TemplateBinding Title}" Margin="8,0" VerticalAlignment="Center" Style="{StaticResource ModernWindowTitle}"
                                                   DataContext="{TemplateBinding IsTitleVisible}"
                                                   Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <!-- title links -->
                                        <ItemsControl Grid.Column="2" ItemsSource="{TemplateBinding TitleLinks}" Margin="0,0,24,0" WindowChrome.IsHitTestVisibleInChrome="True" IsTabStop="False">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Line x:Name="Separator" X1=".5" Y1="3" X2=".5" Y2="12" Margin="5,0" VerticalAlignment="Center" Stroke="{DynamicResource SeparatorBackground}" />

                                                        <CheckBox Content="{Binding DisplayName}"
                                                                Command="mui:LinkCommands.NavigateLink"
                                                                CommandParameter="{Binding Source}"
                                                                CommandTarget="{Binding ElementName=ContentFrame}"
                                                                Style="{StaticResource SystemButtonLink}" IsTabStop="False" />
                                                    </StackPanel>
                                                    <DataTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                                            <Setter Property="Visibility" TargetName="Separator" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </DataTemplate.Triggers>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                        <!-- logo (visible only when LogoData is not null) -->
                                        <Border Grid.Column="1" Background="{DynamicResource Accent}" Width="36" Height="36" Margin="0,0,96,0"
                                                DataContext="{TemplateBinding LogoData}"
                                                Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}" HorizontalAlignment="Left">
                                            <Path Data="{Binding}" Stretch="Fill" Fill="White" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>

                                        <!-- window system buttons-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                            
                                            <!--TOPMOST-->
                                            <Button x:Name="Button_TopMost" Width="25" ToolTip="Topmost" Style="{StaticResource SystemButton}" IsTabStop="False">
                                                <Button.Content>
                                                    <Grid Width="13" Height="12">
                                                        <Path Data="M0,0 L8,0 M4,8 L4,1 M1,5 L4,2 L7,5" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            
                                            <Grid Margin="1,0,1,0">
                                                <!--Mini-mode on-->
                                                <Button IsEnabled="False" Width="25" Margin="0,0,10,0" x:Name="Button_MiniOn" ToolTip="Mini-mode on" Style="{StaticResource SystemButton}" Visibility="Collapsed" IsTabStop="False" >
                                                    <Button.Content>
                                                        <Grid Width="13" Height="12" UseLayoutRounding="True" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,0 L4,3 L8,0 M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                                
                                                <!--Mini-mode off-->
                                                <Button IsEnabled="False" Width="25" Margin="0,0,10,0" x:Name="Button_MiniOff" ToolTip="Mini-mode off" Style="{StaticResource SystemButton}" IsTabStop="False" >
                                                    <Button.Content>
                                                        <Grid Width="13" Height="12"  UseLayoutRounding="True" RenderTransform="1,0,0,1,0,1">
                                                            <Path Data="M0,4 L4,1 L8,4 M0,7 L8,7 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                        </Grid>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                            
                                            <!--Minimize-->
                                            <Button Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="{x:Static modernui:Resources.Minimize}" Style="{StaticResource SystemButton}" IsTabStop="False">
                                                <Button.Content>
                                                    <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            
                                            <!--Close-->
                                            <Button Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="{x:Static modernui:Resources.Close}" Style="{StaticResource SystemCloseButton}" IsTabStop="False" >
                                                <Button.Content>
                                                    <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                                                        <Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                              Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                    </Grid>
                                                </Button.Content>
                                            </Button>
                                            
                                        </StackPanel>
                                    </Grid>

                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <!-- back button -->
                                        <mui:ModernButton Visibility="Hidden" Margin="8,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                                                               EllipseDiameter="24" IconWidth="12" IconHeight="12"
                                                               IconData="F1 M 33,22L 33,26L 19.75,26L 27,33L 20.5,33L 11,24L 20.5,15L 27,15L 19.75,22L 33,22 Z"
                                                               Command="NavigationCommands.BrowseBack"
                                                               CommandTarget="{Binding ElementName=ContentFrame}" 
                                                               ToolTip="{x:Static modernui:Resources.Back}"
                                                               WindowChrome.IsHitTestVisibleInChrome="True" IsTabStop="False" />

                                        <!-- main menu -->
                                        <mui:ModernMenu Grid.Column="1"
                                                             SelectedSource="{Binding Source, ElementName=ContentFrame, Mode=TwoWay}"
                                                             LinkGroups="{TemplateBinding MenuLinkGroups}" IsTabStop="False" />
                                    </Grid>

                                    <!-- content frame -->
                                    <mui:ModernFrame x:Name="ContentFrame" Grid.Row="3" Grid.RowSpan="2" Margin="16,8,16,16" Source="{Binding ContentSource, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" ContentLoader="{TemplateBinding ContentLoader}"/>

                                    <!-- resize grip -->
                                    <Grid Grid.Row="2" x:Name="ResizeGrip" Background="Transparent" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" WindowChrome.ResizeGripDirection="BottomRight">
                                        <Path Width="12" Height="12" Margin="1" 
                                              Stroke="{DynamicResource WindowText}"
                                              StrokeThickness="1"
                                              Stretch="None"
                                              Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderActive}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Button_MiniOff" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Button_MiniOn" Property="Visibility" Value="Visible" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Button_MiniOff" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Button_MiniOn" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Topmost" Value="True">
                            <Setter TargetName="Button_TopMost" Property="Foreground" Value="{DynamicResource ButtonText}" />
                        </Trigger>
                        <Trigger Property="Topmost" Value="False">
                            <Setter TargetName="Button_TopMost" Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" />
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--Textbox placeholder style-->
    <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <TextBox Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent},  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="textSource" Background="Transparent"  Panel.ZIndex="2" />
                        <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsFocused, Source={x:Reference textSource}}" Value="False"/>
                                                <Condition Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value=""/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="DimGray"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>